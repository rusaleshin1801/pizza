{"ast":null,"code":"var _jsxFileName = \"/Users/a366/pizza/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport qs from \"qs\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport Categories from \"../componets/Categories\";\nimport Sort from \"../componets/Sort\";\nimport { List } from \"../componets/Sort\";\nimport PizzaBlock from \"../componets/PizzaBlock/PizzaBlock\";\nimport Skeleton from \"../componets/PizzaBlock/Skeleton\";\nimport Pagination from \"../componets/Pagination\";\nimport { AppContext } from \"../App\";\nimport { fetchPizzas } from \"../redux/slices/pizzaClice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const items = useSelector(state => state.pizza.items);\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filterSlice);\n  const {\n    searchValue\n  } = React.useContext(AppContext);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const onChangeCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const onChangePage = number => {\n    dispatch(setCurrentPage(number));\n  };\n  const getPizzas = async () => {\n    setIsLoading(true);\n    const sortBy = sort.sortProperty.replace(\"-\", \"\");\n    const order = sort.sortProperty.includes(\"-\") ? \"asc\" : \"desc\";\n    const category = categoryId > 0 ? `category=${categoryId}` : \"\";\n    const search = searchValue ? `&search=${searchValue}` : \"\";\n\n    // axios\n    //   .get(\n    //     `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}&${search}`\n    //   )\n    //   .then((res) => {\n    //     setItems(res.data);\n    //     setIsLoading(false);\n    //   });\n\n    // с помощью свойства await сократил код, как на примере выше, убрал .then\n\n    // try{}catch(){} - в try помещяем код, в catch - если ошибка! метод для\n    //  отлавливания ошибок в синхронном коде\n\n    try {\n      dispatch(fetchPizzas({\n        sortBy,\n        order,\n        category,\n        search,\n        currentPage\n      }));\n    } catch (error) {\n      alert(\"Ошибка при загрузке страницы\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Если изменили парамметры и был первый рендрер\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, currentPage]);\n\n  // Если был первый рендер, то проверяем URL - параметры и сохряняем в редаксе\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = List.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({\n        ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []);\n\n  // Если был первый рендер, то запрашиваем пиццы\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n    if (!isSearch.current) {\n      getPizzas();\n    }\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    title: obj.title,\n    price: obj.price,\n    imageUrl: obj.imageUrl,\n    sizes: obj.sizes,\n    types: obj.types\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onClickCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"/NDDcGVWFx2fDV+1Fsp5/3WLt7w=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\n\n// window.scrollTo(0, 0); при переходе на старницу, страница отоброжается на вверху\n\n// const [categoryId, setCategoryId] = useState(0);\n//   const [sortType, setSortType] = useState({\n//     name: \"популярности\",\n//     sort: \"rating\",\n//   }); вынесли useState из Категорий и Сорта\n\n// fetch(\n//   `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}${search}`\n// )\n//   .then((res) => res.json())\n//   .then((arr) => {\n//     setItems(arr);\n//     setIsLoading(false);\n//   });\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useNavigate","qs","useSelector","useDispatch","setCategoryId","setCurrentPage","setFilters","Categories","Sort","List","PizzaBlock","Skeleton","Pagination","AppContext","fetchPizzas","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","isSearch","useRef","isMounted","items","state","pizza","categoryId","sort","currentPage","filterSlice","searchValue","useContext","isLoading","setIsLoading","useState","onChangeCategory","id","onChangePage","number","getPizzas","sortBy","sortProperty","replace","order","includes","category","search","error","alert","useEffect","current","queryString","stringify","window","location","params","parse","substring","find","obj","scrollTo","pizzas","map","title","price","imageUrl","sizes","types","fileName","_jsxFileName","lineNumber","columnNumber","skeletons","Array","_","index","className","children","value","onClickCategory","_c","$RefreshReg$"],"sources":["/Users/a366/pizza/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport qs from \"qs\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  setCategoryId,\n  setCurrentPage,\n  setFilters,\n} from \"../redux/slices/filterSlice\";\nimport Categories from \"../componets/Categories\";\nimport Sort from \"../componets/Sort\";\nimport { List } from \"../componets/Sort\";\nimport PizzaBlock from \"../componets/PizzaBlock/PizzaBlock\";\nimport Skeleton from \"../componets/PizzaBlock/Skeleton\";\nimport Pagination from \"../componets/Pagination\";\nimport { AppContext } from \"../App\";\nimport { fetchPizzas } from \"../redux/slices/pizzaClice\";\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n\n  const items = useSelector((state) => state.pizza.items);\n  const { categoryId, sort, currentPage } = useSelector(\n    (state) => state.filterSlice\n  );\n\n  const { searchValue } = React.useContext(AppContext);\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const onChangeCategory = (id) => {\n    dispatch(setCategoryId(id));\n  };\n\n  const onChangePage = (number) => {\n    dispatch(setCurrentPage(number));\n  };\n\n  const getPizzas = async () => {\n    setIsLoading(true);\n\n    const sortBy = sort.sortProperty.replace(\"-\", \"\");\n    const order = sort.sortProperty.includes(\"-\") ? \"asc\" : \"desc\";\n    const category = categoryId > 0 ? `category=${categoryId}` : \"\";\n    const search = searchValue ? `&search=${searchValue}` : \"\";\n\n    // axios\n    //   .get(\n    //     `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}&${search}`\n    //   )\n    //   .then((res) => {\n    //     setItems(res.data);\n    //     setIsLoading(false);\n    //   });\n\n    // с помощью свойства await сократил код, как на примере выше, убрал .then\n\n    // try{}catch(){} - в try помещяем код, в catch - если ошибка! метод для\n    //  отлавливания ошибок в синхронном коде\n\n    try {\n      dispatch(\n        fetchPizzas({\n          sortBy,\n          order,\n          category,\n          search,\n          currentPage,\n        })\n      );\n    } catch (error) {\n      alert(\"Ошибка при загрузке страницы\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Если изменили парамметры и был первый рендрер\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage,\n      });\n\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, currentPage]);\n\n  // Если был первый рендер, то проверяем URL - параметры и сохряняем в редаксе\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n\n      const sort = List.find((obj) => obj.sortProperty === params.sortProperty);\n\n      dispatch(\n        setFilters({\n          ...params,\n          sort,\n        })\n      );\n      isSearch.current = true;\n    }\n  }, []);\n\n  // Если был первый рендер, то запрашиваем пиццы\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n    if (!isSearch.current) {\n      getPizzas();\n    }\n\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n  const pizzas = items.map((obj) => (\n    <PizzaBlock\n      key={obj.id}\n      title={obj.title}\n      price={obj.price}\n      imageUrl={obj.imageUrl}\n      sizes={obj.sizes}\n      types={obj.types}\n    />\n  ));\n\n  const skeletons = [...new Array(6)].map((_, index) => (\n    <Skeleton key={index} />\n  ));\n\n  return (\n    <div className=\"container\">\n      <div className=\"content__top\">\n        <Categories value={categoryId} onClickCategory={onChangeCategory} />\n        <Sort />\n      </div>\n      <h2 className=\"content__title\">Все пиццы</h2>\n      <div className=\"content__items\">{isLoading ? skeletons : pizzas}</div>\n      <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n    </div>\n  );\n};\n\nexport default Home;\n\n// window.scrollTo(0, 0); при переходе на старницу, страница отоброжается на вверху\n\n// const [categoryId, setCategoryId] = useState(0);\n//   const [sortType, setSortType] = useState({\n//     name: \"популярности\",\n//     sort: \"rating\",\n//   }); вынесли useState из Категорий и Сорта\n\n// fetch(\n//   `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}${search}`\n// )\n//   .then((res) => res.json())\n//   .then((arr) => {\n//     setItems(arr);\n//     setIsLoading(false);\n//   });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}