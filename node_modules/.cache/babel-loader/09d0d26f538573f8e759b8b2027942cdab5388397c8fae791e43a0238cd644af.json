{"ast":null,"code":"var _jsxFileName = \"/Users/a366/pizza/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Header from \"./componets/Header\";\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\nimport NotFound from \"./pages/NotFound\";\n\n// import pizzas from \"./assets/pizza.json\";\n\nimport \"./scss/app.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchValue, setSearchValue] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/cart\",\n          element: /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"F12Wsjogj0HVecr0VGWn/MCEg+A=\");\n_c = App;\nexport default App;\n\n// // {items.map((obj) =>\n// //   isLoading ? (\n// //     <Skeleton />\n// //   ) : (\n// //     <PizzaBlock\n// //       key={obj.id}\n// //       title={obj.title}\n// //       price={obj.price}\n// //       imageUrl={obj.imageUrl}\n// //       sizes={obj.sizes}\n// //       types={obj.types}\n// //     />\n// //   )\n// // )} Выгружаем объект с пиццей блок, с помощью метода map,\n// меняем значения в блоке пицца(цена, название, картинку),\n// тянем их из pizza-block. Далее: если идет загрузка isLoading то загружается\n//  Скелетон, если загрузилась страница, то запускается Пицца блок\n\n// path='*'  так обозначается последняя страница в Route\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Header","Home","Cart","NotFound","jsxDEV","_jsxDEV","App","_s","searchValue","setSearchValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["/Users/a366/pizza/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./componets/Header\";\n\nimport Home from \"./pages/Home\";\nimport Cart from \"./pages/Cart\";\nimport NotFound from \"./pages/NotFound\";\n\n// import pizzas from \"./assets/pizza.json\";\n\nimport \"./scss/app.scss\";\n\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  return (\n    <div className=\"wrapper\">\n      <Header />\n      <div className=\"content\">\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/cart\" element={<Cart />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// // {items.map((obj) =>\n// //   isLoading ? (\n// //     <Skeleton />\n// //   ) : (\n// //     <PizzaBlock\n// //       key={obj.id}\n// //       title={obj.title}\n// //       price={obj.price}\n// //       imageUrl={obj.imageUrl}\n// //       sizes={obj.sizes}\n// //       types={obj.types}\n// //     />\n// //   )\n// // )} Выгружаем объект с пиццей блок, с помощью метода map,\n// меняем значения в блоке пицца(цена, название, картинку),\n// тянем их из pizza-block. Далее: если идет загрузка isLoading то загружается\n//  Скелетон, если загрузилась страница, то запускается Пицца блок\n\n// path='*'  так обозначается последняя страница в Route\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAEhD,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;;AAEA,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAElD,oBACES,OAAA;IAAKK,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBN,OAAA,CAACL,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACVV,OAAA;MAAKK,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBN,OAAA,CAACP,MAAM;QAAAa,QAAA,gBACLN,OAAA,CAACN,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEZ,OAAA,CAACJ,IAAI;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACrCV,OAAA,CAACN,KAAK;UAACiB,IAAI,EAAC,OAAO;UAACC,OAAO,eAAEZ,OAAA,CAACH,IAAI;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eACzCV,OAAA,CAACN,KAAK;UAACiB,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEZ,OAAA,CAACF,QAAQ;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAClC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACR,EAAA,CAfQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAiBZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}