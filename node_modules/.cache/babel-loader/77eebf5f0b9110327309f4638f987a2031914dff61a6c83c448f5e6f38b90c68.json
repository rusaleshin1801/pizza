{"ast":null,"code":"var _jsxFileName = \"/Users/a366/pizza/src/componets/Sort.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sort() {\n  _s();\n  const [Open, setIsOpen] = useState(false);\n  const [Sorting, setSorting] = useState(0);\n  const List = [\"популярности\", \"цене\", \"алфавиту\"];\n  const sortName = List[Sorting];\n  const onClickListItem = i => {\n    setSorting(i);\n    setIsOpen(false);\n  };\n\n  // setSelected(i); выбираем пункт\n  // setIsOpen(false); скрываются поля, после выбора какого-то пункта\n  // const sortName = List[Sorting]; сделали для того, чтобы при нажатии на выбор Сортиторвки, оставалось то значение, на которое мы кликнули\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__label\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"10\",\n        height: \"6\",\n        viewBox: \"0 0 10 6\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\",\n          fill: \"#2C2C2C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043F\\u043E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setIsOpen(!Open),\n        children: sortName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), Open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__popup\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: List.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => onClickListItem(index),\n          className: Sorting === index ? \"active\" : \"\",\n          children: value\n        }, value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Sort, \"nSJ50f31GXG7ZAaSFTXAEqTLJak=\");\n_c = Sort;\nexport default Sort;\nvar _c;\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sort","_s","Open","setIsOpen","Sorting","setSorting","List","sortName","onClickListItem","i","className","children","width","height","viewBox","fill","xmlns","d","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","value","index","_c","$RefreshReg$"],"sources":["/Users/a366/pizza/src/componets/Sort.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Sort() {\n  const [Open, setIsOpen] = useState(false);\n  const [Sorting, setSorting] = useState(0);\n  const List = [\"популярности\", \"цене\", \"алфавиту\"];\n  const sortName = List[Sorting];\n\n  const onClickListItem = (i) => {\n    setSorting(i);\n    setIsOpen(false);\n  };\n\n  // setSelected(i); выбираем пункт\n  // setIsOpen(false); скрываются поля, после выбора какого-то пункта\n  // const sortName = List[Sorting]; сделали для того, чтобы при нажатии на выбор Сортиторвки, оставалось то значение, на которое мы кликнули\n\n  return (\n    <div className=\"sort\">\n      <div className=\"sort__label\">\n        <svg\n          width=\"10\"\n          height=\"6\"\n          viewBox=\"0 0 10 6\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n            fill=\"#2C2C2C\"\n          />\n        </svg>\n        <b>Сортировка по:</b>\n        <span onClick={() => setIsOpen(!Open)}>{sortName}</span>\n      </div>\n      {Open && (\n        <div className=\"sort__popup\">\n          <ul>\n            {List.map((value, index) => (\n              <li\n                key={value}\n                onClick={() => onClickListItem(index)}\n                className={Sorting === index ? \"active\" : \"\"}\n              >\n                {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sort;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAMS,IAAI,GAAG,CAAC,cAAc,EAAE,MAAM,EAAE,UAAU,CAAC;EACjD,MAAMC,QAAQ,GAAGD,IAAI,CAACF,OAAO,CAAC;EAE9B,MAAMI,eAAe,GAAIC,CAAC,IAAK;IAC7BJ,UAAU,CAACI,CAAC,CAAC;IACbN,SAAS,CAAC,KAAK,CAAC;EAClB,CAAC;;EAED;EACA;EACA;;EAEA,oBACEJ,OAAA;IAAKW,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBZ,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BZ,OAAA;QACEa,KAAK,EAAC,IAAI;QACVC,MAAM,EAAC,GAAG;QACVC,OAAO,EAAC,UAAU;QAClBC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAC,4BAA4B;QAAAL,QAAA,eAElCZ,OAAA;UACEkB,CAAC,EAAC,2WAA2W;UAC7WF,IAAI,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACd;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACNtB,OAAA;QAAAY,QAAA,EAAG;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACrBtB,OAAA;QAAMuB,OAAO,EAAEA,CAAA,KAAMnB,SAAS,CAAC,CAACD,IAAI,CAAE;QAAAS,QAAA,EAAEJ;MAAQ;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACpD,EACLnB,IAAI,iBACHH,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,eAC1BZ,OAAA;QAAAY,QAAA,EACGL,IAAI,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACrB1B,OAAA;UAEEuB,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACiB,KAAK,CAAE;UACtCf,SAAS,EAAEN,OAAO,KAAKqB,KAAK,GAAG,QAAQ,GAAG,EAAG;UAAAd,QAAA,EAE5Ca;QAAK,GAJDA,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAMb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAER;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACpB,EAAA,CAlDQD,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAoDb,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}