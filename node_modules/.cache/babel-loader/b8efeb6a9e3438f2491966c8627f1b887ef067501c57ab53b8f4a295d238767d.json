{"ast":null,"code":"var _jsxFileName = \"/Users/a366/pizza/src/componets/Sort.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectSort, setSort } from \"../redux/slices/filterSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = [{\n  name: \"популярности\",\n  sortProperty: \"rating\"\n}, {\n  name: \"цене\",\n  sortProperty: \"price\"\n}, {\n  name: \"алфавиту\",\n  sortProperty: \"title\"\n}];\nfunction Sort() {\n  _s();\n  const dispatch = useDispatch();\n  const sort = useSelector(selectSort);\n  const sortRef = React.useRef();\n  const [Open, setIsOpen] = React.useState(false);\n  const onClickListItem = obj => {\n    dispatch(setSort(obj));\n    setIsOpen(false);\n  };\n  React.useEffect(() => {\n    const handleClickOutside = Event => {\n      if (!Event.path.includes(sortRef.current)) {\n        setIsOpen(false);\n      }\n    };\n    document.body.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.body.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sortRef,\n    className: \"sort\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__label\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"10\",\n        height: \"6\",\n        viewBox: \"0 0 10 6\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\",\n          fill: \"#2C2C2C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043F\\u043E:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => setIsOpen(!Open),\n        children: sort.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), Open && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort__popup\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: List.map((obj, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => onClickListItem(obj),\n          className: sort.sortProperty === obj.sort ? \"active\" : \"\",\n          children: obj.name\n        }, obj, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(Sort, \"/s2PDUxvUe0Tt2mmxkZZwZL6X+8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Sort;\nexport default Sort;\n\n// setSelected(i); выбираем пункт\n// setIsOpen(false); скрываются поля, после выбора какого-то пункта\n// const sortName = List[Sorting]; сделали для того, чтобы при нажатии на выбор Сортиторвки, оставалось то значение, на которое мы кликнули\nvar _c;\n$RefreshReg$(_c, \"Sort\");","map":{"version":3,"names":["React","useSelector","useDispatch","selectSort","setSort","jsxDEV","_jsxDEV","List","name","sortProperty","Sort","_s","dispatch","sort","sortRef","useRef","Open","setIsOpen","useState","onClickListItem","obj","useEffect","handleClickOutside","Event","path","includes","current","document","body","addEventListener","removeEventListener","ref","className","children","width","height","viewBox","fill","xmlns","d","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","_c","$RefreshReg$"],"sources":["/Users/a366/pizza/src/componets/Sort.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectSort, setSort } from \"../redux/slices/filterSlice\";\n\nexport const List = [\n  { name: \"популярности\", sortProperty: \"rating\" },\n  { name: \"цене\", sortProperty: \"price\" },\n  { name: \"алфавиту\", sortProperty: \"title\" },\n];\n\nfunction Sort() {\n  const dispatch = useDispatch();\n  const sort = useSelector(selectSort);\n  const sortRef = React.useRef();\n\n  const [Open, setIsOpen] = React.useState(false);\n\n  const onClickListItem = (obj) => {\n    dispatch(setSort(obj));\n    setIsOpen(false);\n  };\n\n  React.useEffect(() => {\n    const handleClickOutside = (Event) => {\n      if (!Event.path.includes(sortRef.current)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.body.addEventListener(\"click\", handleClickOutside);\n\n    return () => {\n      document.body.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div ref={sortRef} className=\"sort\">\n      <div className=\"sort__label\">\n        <svg\n          width=\"10\"\n          height=\"6\"\n          viewBox=\"0 0 10 6\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 5C10 5.16927 9.93815 5.31576 9.81445 5.43945C9.69075 5.56315 9.54427 5.625 9.375 5.625H0.625C0.455729 5.625 0.309245 5.56315 0.185547 5.43945C0.061849 5.31576 0 5.16927 0 5C0 4.83073 0.061849 4.68424 0.185547 4.56055L4.56055 0.185547C4.68424 0.061849 4.83073 0 5 0C5.16927 0 5.31576 0.061849 5.43945 0.185547L9.81445 4.56055C9.93815 4.68424 10 4.83073 10 5Z\"\n            fill=\"#2C2C2C\"\n          />\n        </svg>\n        <b>Сортировка по:</b>\n        <span onClick={() => setIsOpen(!Open)}>{sort.name}</span>\n      </div>\n      {Open && (\n        <div className=\"sort__popup\">\n          <ul>\n            {List.map((obj, index) => (\n              <li\n                key={obj}\n                onClick={() => onClickListItem(obj)}\n                className={sort.sortProperty === obj.sort ? \"active\" : \"\"}\n              >\n                {obj.name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Sort;\n\n// setSelected(i); выбираем пункт\n// setIsOpen(false); скрываются поля, после выбора какого-то пункта\n// const sortName = List[Sorting]; сделали для того, чтобы при нажатии на выбор Сортиторвки, оставалось то значение, на которое мы кликнули\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}