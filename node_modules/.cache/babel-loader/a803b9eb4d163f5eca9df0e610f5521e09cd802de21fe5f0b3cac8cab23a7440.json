{"ast":null,"code":"var _jsxFileName = \"/Users/a366/pizza/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport qs from \"qs\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport Categories from \"../componets/Categories.tsx\";\nimport Sort from \"../componets/Sort.tsx\";\nimport PizzaBlock from \"../componets/PizzaBlock/PizzaBlock\";\nimport Skeleton from \"../componets/PizzaBlock/Skeleton\";\nimport Pagination from \"../componets/Pagination/index.tsx\";\nimport { fetchPizzas } from \"../redux/slices/pizzaClice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const items = useSelector(state => state.pizza.items);\n  const {\n    categoryId,\n    sort,\n    currentPage,\n    searchValue\n  } = useSelector(state => state.filterSlice);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const onChangeCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const onChangePage = number => {\n    dispatch(setCurrentPage(number));\n  };\n  const getPizzas = async () => {\n    setIsLoading(true);\n    const sortBy = sort.sortProperty.replace(\"-\", \"\");\n    const order = sort.sortProperty.includes(\"-\") ? \"asc\" : \"desc\";\n    const category = categoryId > 0 ? `category=${categoryId}` : \"\";\n    const search = searchValue ? `&search=${searchValue}` : \"\";\n    try {\n      dispatch(fetchPizzas({\n        sortBy,\n        order,\n        category,\n        search,\n        currentPage\n      }));\n    } catch (error) {\n      alert(\"Ошибка при загрузке страницы\");\n    } finally {\n      setIsLoading(false);\n    }\n    window.scrollTo(0, 0);\n  };\n\n  // Если изменили парамметры и был первый рендрер\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const params = {\n        categoryId: categoryId > 0 ? categoryId : null,\n        sortProperty: sort.sortProperty,\n        currentPage\n      };\n      const queryString = qs.stringify(params, {\n        skipNulls: true\n      });\n      navigate(`?${queryString}`);\n    }\n    if (!window.location.search) {\n      fetchPizzas();\n    }\n  }, [categoryId, sort.sortProperty, currentPage]);\n\n  // Если был первый рендер, то проверяем URL - параметры и сохряняем в редаксе\n  React.useEffect(() => {\n    getPizzas();\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n  // Если был первый рендер, то запрашиваем пиццы\n  React.useEffect(() => {\n    isSearch.current = false;\n  }, []);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 37\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onClickCategory: onChangeCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0412\\u0441\\u0435 \\u043F\\u0438\\u0446\\u0446\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"33bJgkd04aAS3p0DA3GoYNXmpls=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\n\n// window.scrollTo(0, 0); при переходе на старницу, страница отоброжается на вверху\n\n// const [categoryId, setCategoryId] = useState(0);\n//   const [sortType, setSortType] = useState({\n//     name: \"популярности\",\n//     sort: \"rating\",\n//   }); вынесли useState из Категорий и Сорта\n\n// fetch(\n//   `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}${search}`\n// )\n//   .then((res) => res.json())\n//   .then((arr) => {\n//     setItems(arr);\n//     setIsLoading(false);\n//   });\n\n// axios\n//   .get(\n//     `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}&${search}`\n//   )\n//   .then((res) => {\n//     setItems(res.data);\n//     setIsLoading(false);\n//   });\n\n// с помощью свойства await сократил код, как на примере выше, убрал .then\n\n// try{}catch(){} - в try помещяем код, в catch - если ошибка! метод для\n//  отлавливания ошибок в синхронном коде\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useNavigate","qs","useSelector","useDispatch","setCategoryId","setCurrentPage","setFilters","Categories","Sort","PizzaBlock","Skeleton","Pagination","fetchPizzas","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","isSearch","useRef","isMounted","items","state","pizza","categoryId","sort","currentPage","searchValue","filterSlice","isLoading","setIsLoading","useState","onChangeCategory","id","onChangePage","number","getPizzas","sortBy","sortProperty","replace","order","includes","category","search","error","alert","window","scrollTo","useEffect","current","params","queryString","stringify","skipNulls","location","pizzas","map","obj","fileName","_jsxFileName","lineNumber","columnNumber","skeletons","Array","_","index","className","children","value","onClickCategory","_c","$RefreshReg$"],"sources":["/Users/a366/pizza/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport qs from \"qs\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  setCategoryId,\n  setCurrentPage,\n  setFilters,\n} from \"../redux/slices/filterSlice\";\nimport Categories from \"../componets/Categories.tsx\";\nimport Sort from \"../componets/Sort.tsx\";\nimport PizzaBlock from \"../componets/PizzaBlock/PizzaBlock\";\nimport Skeleton from \"../componets/PizzaBlock/Skeleton\";\nimport Pagination from \"../componets/Pagination/index.tsx\";\n\nimport { fetchPizzas } from \"../redux/slices/pizzaClice\";\n\nconst Home = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n\n  const items = useSelector((state) => state.pizza.items);\n  const { categoryId, sort, currentPage, searchValue } = useSelector(\n    (state) => state.filterSlice\n  );\n\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const onChangeCategory = (id) => {\n    dispatch(setCategoryId(id));\n  };\n\n  const onChangePage = (number) => {\n    dispatch(setCurrentPage(number));\n  };\n\n  const getPizzas = async () => {\n    setIsLoading(true);\n\n    const sortBy = sort.sortProperty.replace(\"-\", \"\");\n    const order = sort.sortProperty.includes(\"-\") ? \"asc\" : \"desc\";\n    const category = categoryId > 0 ? `category=${categoryId}` : \"\";\n    const search = searchValue ? `&search=${searchValue}` : \"\";\n\n    try {\n      dispatch(\n        fetchPizzas({\n          sortBy,\n          order,\n          category,\n          search,\n          currentPage,\n        })\n      );\n    } catch (error) {\n      alert(\"Ошибка при загрузке страницы\");\n    } finally {\n      setIsLoading(false);\n    }\n    window.scrollTo(0, 0);\n  };\n\n  // Если изменили парамметры и был первый рендрер\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const params = {\n        categoryId: categoryId > 0 ? categoryId : null,\n        sortProperty: sort.sortProperty,\n        currentPage,\n      };\n\n      const queryString = qs.stringify(params, { skipNulls: true });\n\n      navigate(`?${queryString}`);\n    }\n\n    if (!window.location.search) {\n      fetchPizzas();\n    }\n  }, [categoryId, sort.sortProperty, currentPage]);\n\n  // Если был первый рендер, то проверяем URL - параметры и сохряняем в редаксе\n  React.useEffect(() => {\n    getPizzas();\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n  // Если был первый рендер, то запрашиваем пиццы\n  React.useEffect(() => {\n    isSearch.current = false;\n  }, []);\n\n  const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />);\n  const skeletons = [...new Array(6)].map((_, index) => (\n    <Skeleton key={index} />\n  ));\n\n  return (\n    <div className=\"container\">\n      <div className=\"content__top\">\n        <Categories value={categoryId} onClickCategory={onChangeCategory} />\n        <Sort />\n      </div>\n      <h2 className=\"content__title\">Все пиццы</h2>\n      <div className=\"content__items\">{isLoading ? skeletons : pizzas}</div>\n      <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n    </div>\n  );\n};\n\nexport default Home;\n\n// window.scrollTo(0, 0); при переходе на старницу, страница отоброжается на вверху\n\n// const [categoryId, setCategoryId] = useState(0);\n//   const [sortType, setSortType] = useState({\n//     name: \"популярности\",\n//     sort: \"rating\",\n//   }); вынесли useState из Категорий и Сорта\n\n// fetch(\n//   `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}${search}`\n// )\n//   .then((res) => res.json())\n//   .then((arr) => {\n//     setItems(arr);\n//     setIsLoading(false);\n//   });\n\n// axios\n//   .get(\n//     `https://63f9be5e473885d837d21495.mockapi.io/items?page=${currentPage}&limit=4&${category}&sortBy=${sortBy}&oreder=${order}&${search}`\n//   )\n//   .then((res) => {\n//     setItems(res.data);\n//     setIsLoading(false);\n//   });\n\n// с помощью свойства await сократил код, как на примере выше, убрал .then\n\n// try{}catch(){} - в try помещяем код, в catch - если ошибка! метод для\n//  отлавливания ошибок в синхронном коде\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}