{"ast":null,"code":"import { calcTotalPrice } from \"./../../utils/calcTotalPrice.ts\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { getCartFromLS } from \"../../utils/getCartFromLS.ts\";\nconst {\n  items,\n  totalPrice\n} = getCartFromLS();\nconst initialState = {\n  totalPrice,\n  items\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1\n        });\n      }\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n    minusItem(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n    removeItem(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    },\n    clearItem(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    }\n  }\n});\nexport const selectCart = state => state.cartSlice;\nexport const selectCartItemById = (id, count) => state => state.cartSlice.items.find(obj => obj.id === id);\nexport const {\n  addItem,\n  removeItem,\n  minusItem,\n  clearItem\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["calcTotalPrice","createSlice","getCartFromLS","items","totalPrice","initialState","cartSlice","name","reducers","addItem","state","action","findItem","find","obj","id","payload","count","push","minusItem","removeItem","filter","clearItem","selectCart","selectCartItemById","actions","reducer"],"sources":["/Users/a366/pizza/src/redux/slices/cartSlice.ts"],"sourcesContent":["import { calcTotalPrice } from \"./../../utils/calcTotalPrice.ts\";\nimport { RootState } from \"./../store\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { getCartFromLS } from \"../../utils/getCartFromLS.ts\";\n\ntype CartItem = {\n  id: string;\n  title: string;\n  price: number;\n  imageUrl: string;\n  type: number;\n  size: number;\n  count: number;\n};\n\ninterface CartSliceState {\n  totalPrice: number;\n  items: CartItem[];\n}\n\nconst { items, totalPrice } = getCartFromLS();\n\nconst initialState: CartSliceState = {\n  totalPrice,\n  items,\n};\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.count++;\n      } else {\n        state.items.push({\n          ...action.payload,\n          count: 1,\n        });\n      }\n\n      state.totalPrice = calcTotalPrice(state.items);\n    },\n\n    minusItem(state, action) {\n      const findItem = state.items.find((obj) => obj.id === action.payload);\n      if (findItem) {\n        findItem.count--;\n      }\n    },\n\n    removeItem(state, action) {\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\n    },\n    clearItem(state) {\n      state.items = [];\n      state.totalPrice = 0;\n    },\n  },\n});\n\nexport const selectCart = (state: RootState) => state.cartSlice;\nexport const selectCartItemById = (id: string, count: number) => (state) =>\n  state.cartSlice.items.find((obj) => obj.id === id);\n\nexport const { addItem, removeItem, minusItem, clearItem } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,iCAAiC;AAEhE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,QAAQ,8BAA8B;AAiB5D,MAAM;EAAEC,KAAK;EAAEC;AAAW,CAAC,GAAGF,aAAa,EAAE;AAE7C,MAAMG,YAA4B,GAAG;EACnCD,UAAU;EACVD;AACF,CAAC;AAED,MAAMG,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZF,YAAY;EACZG,QAAQ,EAAE;IACRC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAE;MACrB,MAAMC,QAAQ,GAAGF,KAAK,CAACP,KAAK,CAACU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EAAE,CAAC;MAExE,IAAIH,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB,CAAC,MAAM;QACLP,KAAK,CAACP,KAAK,CAACe,IAAI,CAAC;UACf,GAAGP,MAAM,CAACK,OAAO;UACjBC,KAAK,EAAE;QACT,CAAC,CAAC;MACJ;MAEAP,KAAK,CAACN,UAAU,GAAGJ,cAAc,CAACU,KAAK,CAACP,KAAK,CAAC;IAChD,CAAC;IAEDgB,SAASA,CAACT,KAAK,EAAEC,MAAM,EAAE;MACvB,MAAMC,QAAQ,GAAGF,KAAK,CAACP,KAAK,CAACU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;MACrE,IAAIJ,QAAQ,EAAE;QACZA,QAAQ,CAACK,KAAK,EAAE;MAClB;IACF,CAAC;IAEDG,UAAUA,CAACV,KAAK,EAAEC,MAAM,EAAE;MACxBD,KAAK,CAACP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACkB,MAAM,CAAEP,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAAC;IACtE,CAAC;IACDM,SAASA,CAACZ,KAAK,EAAE;MACfA,KAAK,CAACP,KAAK,GAAG,EAAE;MAChBO,KAAK,CAACN,UAAU,GAAG,CAAC;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMmB,UAAU,GAAIb,KAAgB,IAAKA,KAAK,CAACJ,SAAS;AAC/D,OAAO,MAAMkB,kBAAkB,GAAGA,CAACT,EAAU,EAAEE,KAAa,KAAMP,KAAK,IACrEA,KAAK,CAACJ,SAAS,CAACH,KAAK,CAACU,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAKA,EAAE,CAAC;AAEpD,OAAO,MAAM;EAAEN,OAAO;EAAEW,UAAU;EAAED,SAAS;EAAEG;AAAU,CAAC,GAAGhB,SAAS,CAACmB,OAAO;AAE9E,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}